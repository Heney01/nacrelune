rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users: Publicly readable, but only the user can write to their own document.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || (resource.data.diff(request.resource.data).affectedKeys().hasOnly(['rewardPoints', 'creationSlots']));
      
       // Likes on creations
      match /likes/{creatorId} {
        allow read: if true;
        allow create, delete: if request.auth.uid != creatorId;
      }
    }

    // Creations: Publicly readable, but only the creator can manage their creations.
    match /creations/{creationId} {
      allow read: if true;
      allow create: if request.auth.uid == request.resource.data.creatorId;
      allow update: if request.auth.uid == resource.data.creatorId || (request.auth.uid != null && request.resource.data.salesCount == resource.data.salesCount + 1);
      allow delete: if request.auth.uid == resource.data.creatorId;
      
       // Likes on creations
      match /likes/{userId} {
        allow read: if true;
        allow create, delete: if request.auth.uid == userId;
      }
    }
    
    match /necklace/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    match /bracelet/{docId} {
        allow read: if true;
        allow write: if request.auth != null;
    }
    match /earring/{docId} {
        allow read: if true;
        allow write: if request.auth != null;
    }
     match /charms/{charmId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    match /charmCategories/{categoryId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    match /preferences/general {
        allow read: if true;
        allow write: if request.auth != null;
    }

    // Orders: Only accessible by the user who created them or admins.
    match /orders/{orderId} {
      allow read: if true;
      allow create: if true;
      allow update, delete: if request.auth != null; // Only server-side admin actions
    }
    
    // Coupons: readable by all users
    match /coupons/{couponId} {
        allow read: if true;
    }

    // Mail: Write-only for server-side actions. Not readable by clients.
    match /mail/{mailId} {
      allow read: if false;
      allow write: if true; // Should be handled by server-side logic only
    }
  }
}
