rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users: Publicly readable, but only the user can write to their own document.
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
      allow write: if request.resource.data.rewardPoints != resource.data.rewardPoints; // Allow transaction to update points
      // No one can delete a user document directly, only mark as 'deleted' via a server action.
      allow delete: if false; 
    }

    // Creations: Publicly readable, but only the creator can manage their creations.
    match /creations/{creationId} {
      allow read: if true;
      allow create: if request.auth.uid == request.resource.data.creatorId;
      allow update: if request.auth.uid == resource.data.creatorId || request.resource.data.salesCount != resource.data.salesCount;
      allow delete: if request.auth.uid == resource.data.creatorId;
      
       // Likes on creations
      match /likes/{userId} {
        allow read: if true;
        allow create, delete: if request.auth.uid == userId;
      }
    }
    
    // Jewelry Models, Charms, Categories, Preferences: Read-only for clients. Writable only by admins via server actions.
    match /necklace/{docId} {
      allow read: if true;
      allow update(write): if request.resource.data.quantity != resource.data.quantity;
    }
    match /bracelet/{docId} {
        allow read: if true;
        allow update(write): if request.resource.data.quantity != resource.data.quantity;
    }
    match /earring/{docId} {
        allow read: if true;
        allow update(write): if request.resource.data.quantity != resource.data.quantity;
    }
     match /charms/{charmId} {
      allow read: if true;
      allow write: if request.auth != null; // Allow admin write
    }
    match /charmCategories/{categoryId} {
      allow read: if true;
      allow write: if request.auth != null; // Allow admin write
    }
    match /preferences/general {
        allow read: if true;
        allow write: if request.auth != null; // Allow admin write
    }

    // Orders: Only accessible by the user who created them or admins.
    match /orders/{orderId} {
      allow read: if true;
      allow create: if true;
      allow update, delete: if request.auth != null; // Only server-side admin actions
    }
    
    // Coupons: readable by all users
    match /coupons/{couponId} {
        allow read: if true;
    }

    // Mail: Write-only for server-side actions. Not readable by clients.
    match /mail/{mailId} {
      allow read: if false;
      allow create: if true;
    }
  }
}
